{"ast":null,"code":"export default class Api {\n  constructor(host, headers) {\n    this._host = host;\n    this._headers = headers;\n  }\n\n  _getJsonErrors(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    throw new Error(\"Ошибка при загрузке данных\");\n  }\n\n  getCards() {\n    return fetch(this._host + \"cards\", {\n      headers: this._headers\n    }).then(res => this._getJsonErrors(res));\n  }\n\n  getUserInfo() {\n    return fetch(this._host + \"users/me\", {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => this._getJsonErrors(res));\n  }\n\n  editUserInfo(data) {\n    return fetch(this._host + \"users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._getJsonErrors(res));\n  }\n\n  createCard(payload) {\n    return fetch(this._host + \"cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(payload)\n    }).then(res => this._getJsonErrors(res));\n  }\n\n  setAvatar(data) {\n    return fetch(this._host + \"users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data\n      })\n    }).then(res => this._getJsonErrors(res));\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._host}cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._getJsonErrors(res));\n  }\n\n  toggleLike(id, isLike) {\n    return fetch(`${this._host}cards/${id}/likes`, {\n      method: isLike ? \"DELETE\" : \"PUT\",\n      headers: this._headers\n    }).then(res => this._getJsonErrors(res));\n  }\n\n}\nconst api = new Api(config.host, config.headers);","map":{"version":3,"names":["Api","constructor","host","headers","_host","_headers","_getJsonErrors","res","ok","json","Error","getCards","fetch","then","getUserInfo","method","editUserInfo","data","body","JSON","stringify","createCard","payload","setAvatar","avatar","deleteCard","id","toggleLike","isLike","api","config"],"sources":["/Users/Kseniya/dev/mesto-react/mesto-react/src/utils/Api.js"],"sourcesContent":["\nexport default class Api {\n  constructor(host, headers) {\n    this._host = host;\n    this._headers = headers;\n  }\n\n  _getJsonErrors(res){\n    if (res.ok) {\n        return res.json();\n      }\n      throw new Error(\"Ошибка при загрузке данных\");\n    }\n\n  getCards() {\n    return fetch(this._host + \"cards\", {\n      headers: this._headers,\n    })\n    .then((res) => this._getJsonErrors(res))\n  }\n\n  getUserInfo() {\n    return fetch(this._host + \"users/me\", {\n      method: \"GET\",\n      headers: this._headers,\n    })\n    .then((res) => this._getJsonErrors(res))\n  }\n\n  editUserInfo(data) {\n    return fetch(this._host + \"users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    })\n    .then((res) => this._getJsonErrors(res))\n  }\n\n  createCard(payload) {\n    return fetch(this._host + \"cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(payload),\n    })\n    .then((res) => this._getJsonErrors(res))\n  }\n\n  setAvatar(data) {\n    return fetch(this._host + \"users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({ avatar: data }),\n    })\n    .then((res) => this._getJsonErrors(res))\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._host}cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n    .then((res) => this._getJsonErrors(res))\n  }\n\n  toggleLike(id, isLike) {\n    return fetch(`${this._host}cards/${id}/likes`, {\n      method: isLike ? \"DELETE\" : \"PUT\",\n      headers: this._headers,\n    })\n    .then((res) => this._getJsonErrors(res))\n  }\n}\n\nconst api = new Api(config.host, config.headers);\n"],"mappings":"AACA,eAAe,MAAMA,GAAN,CAAU;EACvBC,WAAW,CAACC,IAAD,EAAOC,OAAP,EAAgB;IACzB,KAAKC,KAAL,GAAaF,IAAb;IACA,KAAKG,QAAL,GAAgBF,OAAhB;EACD;;EAEDG,cAAc,CAACC,GAAD,EAAK;IACjB,IAAIA,GAAG,CAACC,EAAR,EAAY;MACR,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACD;;IACD,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;EACD;;EAEHC,QAAQ,GAAG;IACT,OAAOC,KAAK,CAAC,KAAKR,KAAL,GAAa,OAAd,EAAuB;MACjCD,OAAO,EAAE,KAAKE;IADmB,CAAvB,CAAL,CAGNQ,IAHM,CAGAN,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CAHR,CAAP;EAID;;EAEDO,WAAW,GAAG;IACZ,OAAOF,KAAK,CAAC,KAAKR,KAAL,GAAa,UAAd,EAA0B;MACpCW,MAAM,EAAE,KAD4B;MAEpCZ,OAAO,EAAE,KAAKE;IAFsB,CAA1B,CAAL,CAINQ,IAJM,CAIAN,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CAJR,CAAP;EAKD;;EAEDS,YAAY,CAACC,IAAD,EAAO;IACjB,OAAOL,KAAK,CAAC,KAAKR,KAAL,GAAa,UAAd,EAA0B;MACpCW,MAAM,EAAE,OAD4B;MAEpCZ,OAAO,EAAE,KAAKE,QAFsB;MAGpCa,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;IAH8B,CAA1B,CAAL,CAKNJ,IALM,CAKAN,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CALR,CAAP;EAMD;;EAEDc,UAAU,CAACC,OAAD,EAAU;IAClB,OAAOV,KAAK,CAAC,KAAKR,KAAL,GAAa,OAAd,EAAuB;MACjCW,MAAM,EAAE,MADyB;MAEjCZ,OAAO,EAAE,KAAKE,QAFmB;MAGjCa,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeE,OAAf;IAH2B,CAAvB,CAAL,CAKNT,IALM,CAKAN,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CALR,CAAP;EAMD;;EAEDgB,SAAS,CAACN,IAAD,EAAO;IACd,OAAOL,KAAK,CAAC,KAAKR,KAAL,GAAa,iBAAd,EAAiC;MAC3CW,MAAM,EAAE,OADmC;MAE3CZ,OAAO,EAAE,KAAKE,QAF6B;MAG3Ca,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAEI,MAAM,EAAEP;MAAV,CAAf;IAHqC,CAAjC,CAAL,CAKNJ,IALM,CAKAN,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CALR,CAAP;EAMD;;EAEDkB,UAAU,CAACC,EAAD,EAAK;IACb,OAAOd,KAAK,CAAE,GAAE,KAAKR,KAAM,SAAQsB,EAAG,EAA1B,EAA6B;MACvCX,MAAM,EAAE,QAD+B;MAEvCZ,OAAO,EAAE,KAAKE;IAFyB,CAA7B,CAAL,CAINQ,IAJM,CAIAN,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CAJR,CAAP;EAKD;;EAEDoB,UAAU,CAACD,EAAD,EAAKE,MAAL,EAAa;IACrB,OAAOhB,KAAK,CAAE,GAAE,KAAKR,KAAM,SAAQsB,EAAG,QAA1B,EAAmC;MAC7CX,MAAM,EAAEa,MAAM,GAAG,QAAH,GAAc,KADiB;MAE7CzB,OAAO,EAAE,KAAKE;IAF+B,CAAnC,CAAL,CAINQ,IAJM,CAIAN,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CAJR,CAAP;EAKD;;AArEsB;AAwEzB,MAAMsB,GAAG,GAAG,IAAI7B,GAAJ,CAAQ8B,MAAM,CAAC5B,IAAf,EAAqB4B,MAAM,CAAC3B,OAA5B,CAAZ"},"metadata":{},"sourceType":"module"}