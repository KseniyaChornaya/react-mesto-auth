{"ast":null,"code":"var _jsxFileName = \"/Users/Kseniya/dev/mesto-react/mesto-react/src/components/EditAvatarPopup.jsx\",\n    _s = $RefreshSig$();\n\nimport PopupWithForm from \"./PopupWithForm\";\nimport { useRef, useState } from \"react\"; // import { useForm } from \"../hooks/useForm\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditAvatarPopup = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onUpdateAvatar\n  } = _ref;\n  // const avatarData = { avatar: \"\" };\n  // const { values, setValues, handleChange } = useForm(avatarData)\n  const [avatarValue, setAvatarValue] = useState('');\n  const avatarInput = useRef();\n\n  function handleChange(e) {\n    setAvatarValue(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarValue\n    });\n    avatarInput.current.value = '';\n  } // useEffect(() => {\n  //   setValues(avatarData)\n  // }, [isOpen]);\n  // function handleSubmit(e) {\n  //   e.preventDefault();\n  //   onUpdateAvatar({\n  //     avatar: values,\n  //   });\n  // }\n  // function handleChange(e) {\n  //   setAvatar(e.target.value);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"Обновить аватар\",\n    name: \"avatar\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n      id: \"avatarLink\",\n      type: \"url\",\n      className: \"popup__input popup__input_link_avatar\",\n      name: \"linkInput\",\n      minLength: \"2\",\n      ref: avatarInput,\n      onChange: handleChange // value={values.linkInput || ''}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__input-error\",\n      id: \"avatarLink-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditAvatarPopup, \"ZZUEahTNiLsUTlRIFWrmwbuwPRc=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"names":["PopupWithForm","useRef","useState","EditAvatarPopup","isOpen","onClose","onUpdateAvatar","avatarValue","setAvatarValue","avatarInput","handleChange","e","target","value","handleSubmit","preventDefault","avatar","current"],"sources":["/Users/Kseniya/dev/mesto-react/mesto-react/src/components/EditAvatarPopup.jsx"],"sourcesContent":["import PopupWithForm from \"./PopupWithForm\";\nimport { useRef, useState} from \"react\";\n// import { useForm } from \"../hooks/useForm\";\n\nconst EditAvatarPopup = ({ isOpen, onClose, onUpdateAvatar }) => {\n  // const avatarData = { avatar: \"\" };\n  // const { values, setValues, handleChange } = useForm(avatarData)\n\n  const [avatarValue, setAvatarValue]=  useState('');\n  const avatarInput = useRef();\n\n  function handleChange(e) {\n    setAvatarValue(e.target.value)\n  }\n\n  function handleSubmit(e) {\n      e.preventDefault();\n      onUpdateAvatar({\n          avatar: avatarValue,\n      })\n      avatarInput.current.value = ''\n  }\n\n\n  // useEffect(() => {\n  //   setValues(avatarData)\n  // }, [isOpen]);\n\n  // function handleSubmit(e) {\n  //   e.preventDefault();\n  //   onUpdateAvatar({\n  //     avatar: values,\n  //   });\n  // }\n\n  // function handleChange(e) {\n  //   setAvatar(e.target.value);\n  // }\n\n  return (\n    <PopupWithForm\n      title={\"Обновить аватар\"}\n      name={\"avatar\"}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      buttonText=\"Сохранить\"\n    >\n      <input\n        required\n        placeholder=\"Ссылка на новый аватар\"\n        id=\"avatarLink\"\n        type=\"url\"\n        className=\"popup__input popup__input_link_avatar\"\n        name=\"linkInput\"\n        minLength=\"2\"\n        ref={avatarInput}\n        onChange={handleChange}\n        // value={values.linkInput || ''}\n      />\n      <span className=\"popup__input-error\" id=\"avatarLink-error\"></span>\n    </PopupWithForm>\n  );\n};\n\nexport default EditAvatarPopup;\n"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAgC,OAAhC,C,CACA;;;;AAEA,MAAMC,eAAe,GAAG,QAAyC;EAAA;;EAAA,IAAxC;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,CAAwC;EAC/D;EACA;EAEA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAMO,WAAW,GAAGR,MAAM,EAA1B;;EAEA,SAASS,YAAT,CAAsBC,CAAtB,EAAyB;IACvBH,cAAc,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;EACD;;EAED,SAASC,YAAT,CAAsBH,CAAtB,EAAyB;IACrBA,CAAC,CAACI,cAAF;IACAT,cAAc,CAAC;MACXU,MAAM,EAAET;IADG,CAAD,CAAd;IAGAE,WAAW,CAACQ,OAAZ,CAAoBJ,KAApB,GAA4B,EAA5B;EACH,CAjB8D,CAoB/D;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;;;EAEA,oBACE,QAAC,aAAD;IACE,KAAK,EAAE,iBADT;IAEE,IAAI,EAAE,QAFR;IAGE,MAAM,EAAET,MAHV;IAIE,OAAO,EAAEC,OAJX;IAKE,QAAQ,EAAES,YALZ;IAME,UAAU,EAAC,wDANb;IAAA,wBAQE;MACE,QAAQ,MADV;MAEE,WAAW,EAAC,uHAFd;MAGE,EAAE,EAAC,YAHL;MAIE,IAAI,EAAC,KAJP;MAKE,SAAS,EAAC,uCALZ;MAME,IAAI,EAAC,WANP;MAOE,SAAS,EAAC,GAPZ;MAQE,GAAG,EAAEL,WARP;MASE,QAAQ,EAAEC,YATZ,CAUE;;IAVF;MAAA;MAAA;MAAA;IAAA,QARF,eAoBE;MAAM,SAAS,EAAC,oBAAhB;MAAqC,EAAE,EAAC;IAAxC;MAAA;MAAA;MAAA;IAAA,QApBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CA3DD;;GAAMP,e;;KAAAA,e;AA6DN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}